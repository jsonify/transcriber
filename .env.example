# Transcriber Code Signing Configuration
# Copy this file to .env and configure for production signing

# =============================================================================
# DEVELOPER ID CERTIFICATES
# =============================================================================
# Required for production package signing and distribution
# Get these from your Apple Developer account

# Developer ID Installer Certificate
# Used for signing .pkg installer packages
# Format: "Developer ID Installer: Your Name (TEAM_ID)"
# Example: DEVELOPER_ID_INSTALLER="Developer ID Installer: John Doe (ABC123XYZ)"
DEVELOPER_ID_INSTALLER=""

# Developer ID Application Certificate  
# Used for signing app binaries and bundles
# Format: "Developer ID Application: Your Name (TEAM_ID)"
# Example: DEVELOPER_ID_APPLICATION="Developer ID Application: John Doe (ABC123XYZ)"
DEVELOPER_ID_APPLICATION=""

# =============================================================================
# NOTARIZATION CONFIGURATION
# =============================================================================
# Required for Apple notarization service (bypasses Gatekeeper warnings)

# Keychain profile for notarytool
# Create with: xcrun notarytool store-credentials --apple-id your@email.com --team-id ABC123XYZ
# Example: KEYCHAIN_PROFILE="notarytool-profile"
KEYCHAIN_PROFILE=""

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# General signing identity fallback (default: "-" for ad-hoc signing)
# Only used when DEVELOPER_ID_* certificates are not available
SIGNING_IDENTITY="-"

# Skip notarization for faster development builds (default: false)
# Set to "true" to skip notarization even when KEYCHAIN_PROFILE is set
SKIP_NOTARIZATION="false"

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================
#
# 1. OBTAIN DEVELOPER ID CERTIFICATES:
#    - Sign up for Apple Developer Program ($99/year)
#    - Generate Developer ID certificates in Apple Developer portal
#    - Download and install certificates in Keychain Access
#
# 2. CONFIGURE NOTARIZATION:
#    - Run: xcrun notarytool store-credentials --apple-id your@email.com --team-id YOUR_TEAM_ID
#    - Create a keychain profile (e.g., "notarytool-profile")
#    - Set KEYCHAIN_PROFILE to your profile name
#
# 3. TEST CONFIGURATION:
#    - Run: make verify-certificates
#    - Run: make installer-production
#
# 4. VERIFY SIGNED PACKAGE:
#    - Double-click the .pkg file - should install without Gatekeeper warnings
#    - Run: spctl --assess --verbose=4 --type install your-package.pkg
#
# =============================================================================
# TROUBLESHOOTING
# =============================================================================
#
# ERROR: "Developer ID not found"
# - Verify certificates are installed in keychain
# - Check certificate names match exactly (including spaces and parentheses)
# - Use: security find-identity -v -p codesigning
#
# ERROR: "Notarization failed"  
# - Verify Apple ID credentials in keychain profile
# - Check team ID matches your Developer account
# - Ensure app-specific password is used (not regular Apple ID password)
#
# ERROR: "Package still blocked by Gatekeeper"
# - Ensure package is both signed AND notarized
# - Check notarization status: xcrun notarytool info --keychain-profile PROFILE SUBMISSION_ID
# - May need to wait a few minutes for notarization to complete
#
# For more help: https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution